package nz.ac.auckland.parolee.dto;

import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import nz.ac.auckland.parolee.domain.Address;
import nz.ac.auckland.parolee.domain.Curfew;
import nz.ac.auckland.parolee.domain.Gender;
import nz.ac.auckland.parolee.domain.Movement;
import nz.ac.auckland.parolee.jaxb.LocalDateAdapter;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.joda.time.LocalDate;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

/* Class to represent a Parolee. 
 * 
 * An instance of this class represents a DTO Parolee. A DTO Parolee includes
 * a subset of Parolee data, and DTO Parolees objects are exchanged between 
 * clients and the Parolee Web service.
 * 
 * A DTO Parolee is described by:
 * - Personal details: lastname, firstname, gender, date-of-birth, home address;
 * - Curfew: any constraints on the Parolee's location;
 * - Criminal profile: criminal history of the Parolee;
 * - Last know location: timestamped latitude/longitude position.
 * 
 * A Parolee is uniquely identified by an id value of type long.
 * 
 */
@XmlRootElement(name="parolee")
@XmlAccessorType(XmlAccessType.FIELD)
public class Parolee {
	
	@XmlAttribute(name="id")
	private long _id;
	
	@XmlElement(name="last-name")
	private String _lastname;
	
	@XmlElement(name="first-name")
	private String _firstname;
	
	@XmlElement(name="gender")
	private Gender _gender;
	
	@XmlElement(name="date-of-birth")
	@XmlJavaTypeAdapter(value=LocalDateAdapter.class)
	private LocalDate _dateOfBirth;
	
	@XmlElement(name="home-address")
	private Address _homeAddress;
	
	@XmlElement(name="curfew")
	private Curfew _curfew;
	
	@XmlElement(name="last-known-position")
	private Movement _lastKnownPosition;
	
	protected Parolee() {
		
	}
	
	/**
	 * Constructs a DTO Parolee instance. This method is intended to be called
	 * by Web service clients when creating new Parolees. The id field is not 
	 * required because it is generated by the Web service. Similarly, the 
	 * last-known-position field is not required. Of the constructor's 
	 * parameters, all fields must be non-null with the exception of curfew, 
	 * which is optional (not all Parolees are subject to a curfew).
     *
	 */
	public Parolee(String lastname,
			String firstname,
			Gender gender,
			LocalDate dateOfBirth,
			Address homeAddress,
			Curfew curfew) throws IllegalArgumentException {
		this(0,lastname,firstname,gender,dateOfBirth,homeAddress,curfew,null);
	}
	
	/**
	 * Constructs a DTO Parolee instance. This method should NOT be called by 
	 * Web Service clients. It is intended to be used by the Web Service 
	 * implementation when creating a DTO Parolee from a domain-model Parolee 
	 * object.
	 */
	public Parolee(long id,
			String lastname,
			String firstname,
			Gender gender,
			LocalDate dateOfBirth,
			Address homeAddress,
			Curfew curfew,
			Movement lastKnownPosition) {
		_id = id;
		_lastname = lastname;
		_firstname = firstname;
		_gender = gender;
		_dateOfBirth = dateOfBirth;
		_homeAddress = homeAddress;
		_curfew = curfew;
		_lastKnownPosition = lastKnownPosition;
	}
	
	public long getId() {
		return _id;
	}
	
	public String getLastname() {
		return _lastname;
	}
	
	public void setLastname(String lastname) {
		_lastname = lastname;
	}
	
	public String getFirstname() {
		return _firstname;
	}
	
	public void setFirstname(String firstname) {
		_firstname = firstname;
	}
	
	public Gender getGender() {
		return _gender;
	}
	
	public void setGender(Gender gender) {
		_gender = gender;
	}
	
	public LocalDate getDateOfBirth() {
		return _dateOfBirth;
	}
	
	public void setDateOfBirth(LocalDate dateOfBirth) {
		_dateOfBirth = dateOfBirth;
	}
	
	public Address getHomeAddress() {
		return _homeAddress;
	}
	
	public void setHomeAddress(Address homeAddress) {
		_homeAddress = homeAddress;
	}
	
	public Curfew getCurfew() {
		return _curfew;
	}
	
	public void setCurfew(Curfew curfew) {
		_curfew = curfew;
	}
	
	public Movement getLastKnownPosition() {
		return _lastKnownPosition;
	}
	
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer();
		
		DateTimeFormatter dOfBFormatter = DateTimeFormat.forPattern("dd/MM/yyyy");
		DateTimeFormatter timeFormatter = DateTimeFormat.forPattern("HH:mm");
		
		buffer.append("Parolee: { [");
		buffer.append(_id);
		buffer.append("]; ");
		if(_lastname != null) {
			buffer.append(_lastname);
			buffer.append(", ");
		}
		if(_firstname != null) {
			buffer.append(_firstname);
		}
		buffer.append("; ");
		if(_gender != null) {
			buffer.append(_gender);
		}
		buffer.append("; ");
		
		if(_dateOfBirth != null) {
			buffer.append(dOfBFormatter.print(_dateOfBirth));
		}
		buffer.append("\n  ");
		if(_homeAddress != null) {
			buffer.append(_homeAddress);
		}
		
		buffer.append("\n  ");
		if(_curfew != null) {
			buffer.append("\n  Curfew from ");
			buffer.append(timeFormatter.print(_curfew.getStartTime()));
			buffer.append(" to ");
			buffer.append(timeFormatter.print(_curfew.getEndTime()));
			buffer.append(" @ ");
			
			if(_homeAddress != null && _homeAddress.equals(_curfew.getConfinementAddress())) {
				buffer.append("home");
			} else {
				buffer.append(_curfew.getConfinementAddress());
			}
		} else {
			buffer.append("No curfew conditions");
		}
		
		buffer.append(" }");
		
		return buffer.toString();
	}
	
	@Override
	public boolean equals(Object obj) {
		if (!(obj instanceof Parolee))
            return false;
        if (obj == this)
            return true;

        Parolee rhs = (Parolee) obj;
        return new EqualsBuilder().
            append(_id, rhs._id).
            append(_lastname, rhs._lastname).
            append(_firstname, rhs._firstname).
            append(_gender, rhs._gender).
            append(_dateOfBirth, rhs._dateOfBirth).
            append(_homeAddress, rhs._homeAddress).
            isEquals();
	}
	
	@Override
	public int hashCode() {
		return new HashCodeBuilder(17, 31). 
	            append(_id).
	            append(_lastname).
	            append(_firstname).
	            append(_gender).
	            append(_dateOfBirth).
	            append(_homeAddress).
	            toHashCode();
	}
}


